basePath: /api/
definitions:
  entities.Song:
    properties:
      author:
        type: string
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      title:
        type: string
      updatedAt:
        type: string
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  httputil.HTTPError:
    properties:
      code:
        example: 400
        type: integer
      message:
        example: status bad request
        type: string
    type: object
host: localhost:7000
info:
  contact: {}
  description: This is a practice rest api with go.
  title: Practice Two api doc
  version: "1.0"
paths:
  /:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.Song'
            type: array
      summary: Show all songs
      tags:
      - songs
  /{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Show all songs
      tags:
      - songs
    get:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.Song'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Show song by id
      tags:
      - songs
    post:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            items:
              $ref: '#/definitions/entities.Song'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Show all songs
      tags:
      - songs
    put:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            items:
              $ref: '#/definitions/entities.Song'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.HTTPError'
      summary: Show all songs
      tags:
      - songs
swagger: "2.0"
